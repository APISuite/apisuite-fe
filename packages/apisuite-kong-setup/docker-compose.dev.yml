version: "3.5"
services:
  ##############################
  # postgres                   #
  ##############################
  kong-database-dev:
    image: "postgres:9.5"
    container_name: kong-database-postgres-dev
    restart: always
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
    ports:
      - 5432:5432
    networks: 
      - kong-network-dev
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5
  kong-database-migrations-dev:
    image: cloudokihub/kong-enterprise:develop
    restart: on-failure
    command: "kong migrations up --v"
    environment:
      KONG_LICENSE_DATA: '{"license":{"signature":"ae582d55f0f17b1bf036629ac82ca01646f1a08e36f310940642f180882ab9283850ea34700b52df479f12b9f6bf732742adcda7ca3d72d8ed8d7706ee7c4767","payload":{"customer":"Cloudoki","license_creation_date":"2019-03-18","product_subscription":"Kong Enterprise Edition","admin_seats":"5","support_plan":"None","license_expiration_date":"2019-05-17","license_key":"0014100001ynzDiAAI_a1V1K000006gYX8UAM"},"version":1}}'
      KONG_PG_HOST: kong-database-dev
      KONG_CUSTOM_PLUGINS: "docker-manager,scenario-manager"
    networks: 
      - kong-network-dev
    depends_on:
      - kong-database-dev
  kong-api-gateway-dev:
    image: cloudokihub/kong-enterprise:develop
    restart: always
    container_name: kong-api-gateway-dev
    environment:
      KONG_LICENSE_DATA: '{"license":{"signature":"ae582d55f0f17b1bf036629ac82ca01646f1a08e36f310940642f180882ab9283850ea34700b52df479f12b9f6bf732742adcda7ca3d72d8ed8d7706ee7c4767","payload":{"customer":"Cloudoki","license_creation_date":"2019-03-18","product_subscription":"Kong Enterprise Edition","admin_seats":"5","support_plan":"None","license_expiration_date":"2019-05-17","license_key":"0014100001ynzDiAAI_a1V1K000006gYX8UAM"},"version":1}}'
      KONG_PG_HOST: kong-database-dev
      KONG_PROXY_LISTEN: "0.0.0.0:9000, 0.0.0.0:9443 ssl"
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:9443
      KONG_ADMIN_LISTEN: 0.0.0.0:9001
      KONG_CUSTOM_PLUGINS: "docker-manager,scenario-manager"
    depends_on:
      - kong-database-migrations-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong-api-gateway:9001"]
      interval: 5s
      timeout: 2s
      retries: 15
    networks: 
      - kong-network-dev
    ports:
      - 9001:9001
      - 9443:9443
      - 9445:9445
      - 9000:9000
      - 9002:8002
      - 9003:8003
### services stuff
  appcenter-develop:
    image: cloudokihub/openbank-mysql:latest
    container_name: appcenter-develop
    restart: always
    ports:
      - 3309:3306
    networks: 
      - kong-network-dev
  openbank-container-manager-dev:
    image: cloudokihub/openbank-container-manager:develop
    container_name: openbank_container_manager_dev
    restart: always
    environment:
      OBCMANAGER_KONG_NETWORK: "kong-network-dev"
      OBCMANAGER_KONG_GATEWAY_URL: "http://kong-api-gateway-dev:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kong-network-dev
  openbank-demo-org-dev:
    image: cloudokihub/openbank-sandbox-api:1.4.0.47.develop
    container_name: openbank_demo_org
    restart: always
    ports:
      - 3000:3000
    networks:
      - kong-network-dev
  openbank-sandbox-auth-server-migrations:
    image: cloudokihub/openbank-sandbox-auth-server:develop
    depends_on:
      - appcenter-develop
    restart: on-failure
    command: "./node_modules/.bin/knex migrate:latest"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kong-network-dev

  openbank-sandbox-auth-server:
    image: cloudokihub/openbank-sandbox-auth-server:develop
    container_name: openbank_sandbox_auth_server
    depends_on:
      - appcenter-develop
    restart: always
    environment:
      OBSANDBOXAUTH_KONG_API_GATEWAY: "http://kong-api-gateway-dev:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kong-network-dev
  openbank-kong-init:
    image: cloudokihub/kong-init:latest
    depends_on:
      - kong-database-dev
      - kong-api-gateway-dev
    restart: on-failure
    volumes:
      - ./kong-init:/etc/kong-init/:ro
    command: kong-init --url http://kong-api-gateway-dev:9001 --path /etc/kong-init/setup.yaml --wait
    networks:
      - kong-network-dev
networks: 
  kong-network-dev:
    name: kong-global-network-dev
