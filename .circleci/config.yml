version: 2.1

orbs:
  slack: circleci/slack@4.4.2

executors:
  node14-executor:
    docker:
      - image: circleci/node:14.16.1

jobs:
  test:
    executor: node14-executor
    steps:
      - checkout
      - run: ./prepare_tests.sh
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run: npm test
      - slack/notify:
          event: fail
          template: basic_fail_1
      - run: cp -r ../.ssh/ .
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  release:
    executor: node14-executor
    steps:
      - attach_workspace:
          at: ~/
      - run: cp -r .ssh ../.ssh && rm -rf .ssh
      - run: GH_TOKEN=$GH_TOKEN npx semantic-release
      - slack/notify:
          event: fail
          template: basic_fail_1
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  build:
    docker:
      - image: cimg/base:2020.01
    resource_class: medium+
    steps:
      - attach_workspace:
          at: ~/
      - setup_remote_docker
      - run: ./build.sh
      - slack/notify:
          event: fail
          template: basic_fail_1
      - persist_to_workspace:
          root: ~/
          paths:
            - project

  deploy:
    docker:
      - image: cimg/base:2020.01
    steps:
      - add_ssh_keys:
          fingerprints:
            - 31:96:89:eb:aa:ee:09:68:3a:6b:10:ad:d0:95:81:80
      - attach_workspace:
          at: ~/
      - run: ./deploy.sh
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

workflows:
  version: 2
  build:
    jobs:
      - test:
          context: slack
      - release:
          context:
            - docker
            - slack
          filters:
            branches:
              only:
                - master
          requires:
            - test
      - build:
          context:
            - docker
            - slack
          filters:
            branches:
              only:
                - master
          requires:
            - release
      - deploy:
          context:
            - vmachines
            - slack
          filters:
            branches:
              only:
                - master
          requires:
            - build
